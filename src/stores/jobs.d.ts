import type { Job, JobStatus } from '../types';
export declare const useJobsStore: import("pinia").StoreDefinition<"jobs", Pick<{
    jobs: import("vue").Ref<{
        id: string;
        jobNumber: string;
        partNumber: string;
        partName: string;
        customer: string;
        quantity: number;
        completedQuantity: number;
        status: JobStatus;
        priority: import("../types").Priority;
        dueDate: string;
        startDate?: string | undefined;
        estimatedHours: number;
        actualHours: number;
        operator?: string | undefined;
        machine?: string | undefined;
        operation: string;
        notes: string;
        operations: {
            id: string;
            operationNumber: number;
            name: string;
            description: string;
            workCenter: string;
            machine?: string | undefined;
            setupTime: number;
            cycleTime: number;
            status: import("../types").OperationStatus;
            completedQuantity: number;
            operator?: string | undefined;
            startTime?: string | undefined;
            endTime?: string | undefined;
            notes?: string | undefined;
            tooling: string[];
            programs: string[];
            qualityChecks: {
                id: string;
                requirementId: string;
                timestamp: string;
                inspector: string;
                result: "pass" | "fail" | "rework";
                actualValue?: string | undefined;
                notes?: string | undefined;
                images?: string[] | undefined;
            }[];
            instructions: string[];
        }[];
        dncPrograms: {
            id: string;
            programNumber: string;
            name: string;
            description: string;
            filePath: string;
            version: string;
            lastModified: string;
            operationId: string;
            machine: string;
            toolList: {
                id: string;
                toolNumber: number;
                description: string;
                type: import("../types").ToolType;
                diameter?: number | undefined;
                length?: number | undefined;
                material: string;
                coating?: string | undefined;
                vendor: string;
                partNumber: string;
                location: string;
                status: "available" | "in-use" | "maintenance" | "broken";
            }[];
            parameters: {
                name: string;
                value: string | number;
                description: string;
                unit?: string | undefined;
            }[];
            estimatedRunTime: number;
            status: "active" | "archived" | "development";
        }[];
        history: {
            id: string;
            timestamp: string;
            userId: string;
            userName: string;
            action: import("../types").HistoryAction;
            field?: string | undefined;
            oldValue?: any;
            newValue?: any;
            notes?: string | undefined;
            operationId?: string | undefined;
        }[];
        qualityRequirements: {
            id: string;
            feature: string;
            specification: string;
            tolerance: string;
            inspectionMethod: string;
            frequency: "first-piece" | "in-process" | "final" | "statistical";
            operationId?: string | undefined;
        }[];
        tooling: {
            id: string;
            operationId: string;
            toolId: string;
            quantity: number;
            setup: boolean;
            critical: boolean;
            alternatives?: string[] | undefined;
        }[];
        materials: {
            id: string;
            material: string;
            specification: string;
            quantity: number;
            unit: string;
            lotNumber?: string | undefined;
            certificationRequired: boolean;
            received: boolean;
            location?: string | undefined;
        }[];
        drawings: {
            id: string;
            name: string;
            revision: string;
            filePath: string;
            type: "setup" | "part" | "assembly" | "detail";
            lastModified: string;
            operationId?: string | undefined;
        }[];
        aiRecommendation?: {
            machine?: string | undefined;
            operator?: string | undefined;
            confidence?: number | undefined;
            reason?: string | undefined;
        } | undefined;
        createdAt: string;
        updatedAt: string;
    }[], Job[] | {
        id: string;
        jobNumber: string;
        partNumber: string;
        partName: string;
        customer: string;
        quantity: number;
        completedQuantity: number;
        status: JobStatus;
        priority: import("../types").Priority;
        dueDate: string;
        startDate?: string | undefined;
        estimatedHours: number;
        actualHours: number;
        operator?: string | undefined;
        machine?: string | undefined;
        operation: string;
        notes: string;
        operations: {
            id: string;
            operationNumber: number;
            name: string;
            description: string;
            workCenter: string;
            machine?: string | undefined;
            setupTime: number;
            cycleTime: number;
            status: import("../types").OperationStatus;
            completedQuantity: number;
            operator?: string | undefined;
            startTime?: string | undefined;
            endTime?: string | undefined;
            notes?: string | undefined;
            tooling: string[];
            programs: string[];
            qualityChecks: {
                id: string;
                requirementId: string;
                timestamp: string;
                inspector: string;
                result: "pass" | "fail" | "rework";
                actualValue?: string | undefined;
                notes?: string | undefined;
                images?: string[] | undefined;
            }[];
            instructions: string[];
        }[];
        dncPrograms: {
            id: string;
            programNumber: string;
            name: string;
            description: string;
            filePath: string;
            version: string;
            lastModified: string;
            operationId: string;
            machine: string;
            toolList: {
                id: string;
                toolNumber: number;
                description: string;
                type: import("../types").ToolType;
                diameter?: number | undefined;
                length?: number | undefined;
                material: string;
                coating?: string | undefined;
                vendor: string;
                partNumber: string;
                location: string;
                status: "available" | "in-use" | "maintenance" | "broken";
            }[];
            parameters: {
                name: string;
                value: string | number;
                description: string;
                unit?: string | undefined;
            }[];
            estimatedRunTime: number;
            status: "active" | "archived" | "development";
        }[];
        history: {
            id: string;
            timestamp: string;
            userId: string;
            userName: string;
            action: import("../types").HistoryAction;
            field?: string | undefined;
            oldValue?: any;
            newValue?: any;
            notes?: string | undefined;
            operationId?: string | undefined;
        }[];
        qualityRequirements: {
            id: string;
            feature: string;
            specification: string;
            tolerance: string;
            inspectionMethod: string;
            frequency: "first-piece" | "in-process" | "final" | "statistical";
            operationId?: string | undefined;
        }[];
        tooling: {
            id: string;
            operationId: string;
            toolId: string;
            quantity: number;
            setup: boolean;
            critical: boolean;
            alternatives?: string[] | undefined;
        }[];
        materials: {
            id: string;
            material: string;
            specification: string;
            quantity: number;
            unit: string;
            lotNumber?: string | undefined;
            certificationRequired: boolean;
            received: boolean;
            location?: string | undefined;
        }[];
        drawings: {
            id: string;
            name: string;
            revision: string;
            filePath: string;
            type: "setup" | "part" | "assembly" | "detail";
            lastModified: string;
            operationId?: string | undefined;
        }[];
        aiRecommendation?: {
            machine?: string | undefined;
            operator?: string | undefined;
            confidence?: number | undefined;
            reason?: string | undefined;
        } | undefined;
        createdAt: string;
        updatedAt: string;
    }[]>;
    loading: import("vue").Ref<boolean, boolean>;
    error: import("vue").Ref<string | null, string | null>;
    activeJobs: import("vue").ComputedRef<{
        id: string;
        jobNumber: string;
        partNumber: string;
        partName: string;
        customer: string;
        quantity: number;
        completedQuantity: number;
        status: JobStatus;
        priority: import("../types").Priority;
        dueDate: string;
        startDate?: string | undefined;
        estimatedHours: number;
        actualHours: number;
        operator?: string | undefined;
        machine?: string | undefined;
        operation: string;
        notes: string;
        operations: {
            id: string;
            operationNumber: number;
            name: string;
            description: string;
            workCenter: string;
            machine?: string | undefined;
            setupTime: number;
            cycleTime: number;
            status: import("../types").OperationStatus;
            completedQuantity: number;
            operator?: string | undefined;
            startTime?: string | undefined;
            endTime?: string | undefined;
            notes?: string | undefined;
            tooling: string[];
            programs: string[];
            qualityChecks: {
                id: string;
                requirementId: string;
                timestamp: string;
                inspector: string;
                result: "pass" | "fail" | "rework";
                actualValue?: string | undefined;
                notes?: string | undefined;
                images?: string[] | undefined;
            }[];
            instructions: string[];
        }[];
        dncPrograms: {
            id: string;
            programNumber: string;
            name: string;
            description: string;
            filePath: string;
            version: string;
            lastModified: string;
            operationId: string;
            machine: string;
            toolList: {
                id: string;
                toolNumber: number;
                description: string;
                type: import("../types").ToolType;
                diameter?: number | undefined;
                length?: number | undefined;
                material: string;
                coating?: string | undefined;
                vendor: string;
                partNumber: string;
                location: string;
                status: "available" | "in-use" | "maintenance" | "broken";
            }[];
            parameters: {
                name: string;
                value: string | number;
                description: string;
                unit?: string | undefined;
            }[];
            estimatedRunTime: number;
            status: "active" | "archived" | "development";
        }[];
        history: {
            id: string;
            timestamp: string;
            userId: string;
            userName: string;
            action: import("../types").HistoryAction;
            field?: string | undefined;
            oldValue?: any;
            newValue?: any;
            notes?: string | undefined;
            operationId?: string | undefined;
        }[];
        qualityRequirements: {
            id: string;
            feature: string;
            specification: string;
            tolerance: string;
            inspectionMethod: string;
            frequency: "first-piece" | "in-process" | "final" | "statistical";
            operationId?: string | undefined;
        }[];
        tooling: {
            id: string;
            operationId: string;
            toolId: string;
            quantity: number;
            setup: boolean;
            critical: boolean;
            alternatives?: string[] | undefined;
        }[];
        materials: {
            id: string;
            material: string;
            specification: string;
            quantity: number;
            unit: string;
            lotNumber?: string | undefined;
            certificationRequired: boolean;
            received: boolean;
            location?: string | undefined;
        }[];
        drawings: {
            id: string;
            name: string;
            revision: string;
            filePath: string;
            type: "setup" | "part" | "assembly" | "detail";
            lastModified: string;
            operationId?: string | undefined;
        }[];
        aiRecommendation?: {
            machine?: string | undefined;
            operator?: string | undefined;
            confidence?: number | undefined;
            reason?: string | undefined;
        } | undefined;
        createdAt: string;
        updatedAt: string;
    }[]>;
    completedJobs: import("vue").ComputedRef<{
        id: string;
        jobNumber: string;
        partNumber: string;
        partName: string;
        customer: string;
        quantity: number;
        completedQuantity: number;
        status: JobStatus;
        priority: import("../types").Priority;
        dueDate: string;
        startDate?: string | undefined;
        estimatedHours: number;
        actualHours: number;
        operator?: string | undefined;
        machine?: string | undefined;
        operation: string;
        notes: string;
        operations: {
            id: string;
            operationNumber: number;
            name: string;
            description: string;
            workCenter: string;
            machine?: string | undefined;
            setupTime: number;
            cycleTime: number;
            status: import("../types").OperationStatus;
            completedQuantity: number;
            operator?: string | undefined;
            startTime?: string | undefined;
            endTime?: string | undefined;
            notes?: string | undefined;
            tooling: string[];
            programs: string[];
            qualityChecks: {
                id: string;
                requirementId: string;
                timestamp: string;
                inspector: string;
                result: "pass" | "fail" | "rework";
                actualValue?: string | undefined;
                notes?: string | undefined;
                images?: string[] | undefined;
            }[];
            instructions: string[];
        }[];
        dncPrograms: {
            id: string;
            programNumber: string;
            name: string;
            description: string;
            filePath: string;
            version: string;
            lastModified: string;
            operationId: string;
            machine: string;
            toolList: {
                id: string;
                toolNumber: number;
                description: string;
                type: import("../types").ToolType;
                diameter?: number | undefined;
                length?: number | undefined;
                material: string;
                coating?: string | undefined;
                vendor: string;
                partNumber: string;
                location: string;
                status: "available" | "in-use" | "maintenance" | "broken";
            }[];
            parameters: {
                name: string;
                value: string | number;
                description: string;
                unit?: string | undefined;
            }[];
            estimatedRunTime: number;
            status: "active" | "archived" | "development";
        }[];
        history: {
            id: string;
            timestamp: string;
            userId: string;
            userName: string;
            action: import("../types").HistoryAction;
            field?: string | undefined;
            oldValue?: any;
            newValue?: any;
            notes?: string | undefined;
            operationId?: string | undefined;
        }[];
        qualityRequirements: {
            id: string;
            feature: string;
            specification: string;
            tolerance: string;
            inspectionMethod: string;
            frequency: "first-piece" | "in-process" | "final" | "statistical";
            operationId?: string | undefined;
        }[];
        tooling: {
            id: string;
            operationId: string;
            toolId: string;
            quantity: number;
            setup: boolean;
            critical: boolean;
            alternatives?: string[] | undefined;
        }[];
        materials: {
            id: string;
            material: string;
            specification: string;
            quantity: number;
            unit: string;
            lotNumber?: string | undefined;
            certificationRequired: boolean;
            received: boolean;
            location?: string | undefined;
        }[];
        drawings: {
            id: string;
            name: string;
            revision: string;
            filePath: string;
            type: "setup" | "part" | "assembly" | "detail";
            lastModified: string;
            operationId?: string | undefined;
        }[];
        aiRecommendation?: {
            machine?: string | undefined;
            operator?: string | undefined;
            confidence?: number | undefined;
            reason?: string | undefined;
        } | undefined;
        createdAt: string;
        updatedAt: string;
    }[]>;
    urgentJobs: import("vue").ComputedRef<{
        id: string;
        jobNumber: string;
        partNumber: string;
        partName: string;
        customer: string;
        quantity: number;
        completedQuantity: number;
        status: JobStatus;
        priority: import("../types").Priority;
        dueDate: string;
        startDate?: string | undefined;
        estimatedHours: number;
        actualHours: number;
        operator?: string | undefined;
        machine?: string | undefined;
        operation: string;
        notes: string;
        operations: {
            id: string;
            operationNumber: number;
            name: string;
            description: string;
            workCenter: string;
            machine?: string | undefined;
            setupTime: number;
            cycleTime: number;
            status: import("../types").OperationStatus;
            completedQuantity: number;
            operator?: string | undefined;
            startTime?: string | undefined;
            endTime?: string | undefined;
            notes?: string | undefined;
            tooling: string[];
            programs: string[];
            qualityChecks: {
                id: string;
                requirementId: string;
                timestamp: string;
                inspector: string;
                result: "pass" | "fail" | "rework";
                actualValue?: string | undefined;
                notes?: string | undefined;
                images?: string[] | undefined;
            }[];
            instructions: string[];
        }[];
        dncPrograms: {
            id: string;
            programNumber: string;
            name: string;
            description: string;
            filePath: string;
            version: string;
            lastModified: string;
            operationId: string;
            machine: string;
            toolList: {
                id: string;
                toolNumber: number;
                description: string;
                type: import("../types").ToolType;
                diameter?: number | undefined;
                length?: number | undefined;
                material: string;
                coating?: string | undefined;
                vendor: string;
                partNumber: string;
                location: string;
                status: "available" | "in-use" | "maintenance" | "broken";
            }[];
            parameters: {
                name: string;
                value: string | number;
                description: string;
                unit?: string | undefined;
            }[];
            estimatedRunTime: number;
            status: "active" | "archived" | "development";
        }[];
        history: {
            id: string;
            timestamp: string;
            userId: string;
            userName: string;
            action: import("../types").HistoryAction;
            field?: string | undefined;
            oldValue?: any;
            newValue?: any;
            notes?: string | undefined;
            operationId?: string | undefined;
        }[];
        qualityRequirements: {
            id: string;
            feature: string;
            specification: string;
            tolerance: string;
            inspectionMethod: string;
            frequency: "first-piece" | "in-process" | "final" | "statistical";
            operationId?: string | undefined;
        }[];
        tooling: {
            id: string;
            operationId: string;
            toolId: string;
            quantity: number;
            setup: boolean;
            critical: boolean;
            alternatives?: string[] | undefined;
        }[];
        materials: {
            id: string;
            material: string;
            specification: string;
            quantity: number;
            unit: string;
            lotNumber?: string | undefined;
            certificationRequired: boolean;
            received: boolean;
            location?: string | undefined;
        }[];
        drawings: {
            id: string;
            name: string;
            revision: string;
            filePath: string;
            type: "setup" | "part" | "assembly" | "detail";
            lastModified: string;
            operationId?: string | undefined;
        }[];
        aiRecommendation?: {
            machine?: string | undefined;
            operator?: string | undefined;
            confidence?: number | undefined;
            reason?: string | undefined;
        } | undefined;
        createdAt: string;
        updatedAt: string;
    }[]>;
    jobsByStatus: import("vue").ComputedRef<{
        pending: number;
        setup: number;
        running: number;
        'on-hold': number;
        completed: number;
    }>;
    fetchJobs: () => Promise<void>;
    updateJobStatus: (jobId: string, status: JobStatus, notes?: string) => Promise<boolean>;
    updateJobProgress: (jobId: string, completedQuantity: number) => Promise<boolean>;
    getJobById: (jobId: string) => {
        id: string;
        jobNumber: string;
        partNumber: string;
        partName: string;
        customer: string;
        quantity: number;
        completedQuantity: number;
        status: JobStatus;
        priority: import("../types").Priority;
        dueDate: string;
        startDate?: string | undefined;
        estimatedHours: number;
        actualHours: number;
        operator?: string | undefined;
        machine?: string | undefined;
        operation: string;
        notes: string;
        operations: {
            id: string;
            operationNumber: number;
            name: string;
            description: string;
            workCenter: string;
            machine?: string | undefined;
            setupTime: number;
            cycleTime: number;
            status: import("../types").OperationStatus;
            completedQuantity: number;
            operator?: string | undefined;
            startTime?: string | undefined;
            endTime?: string | undefined;
            notes?: string | undefined;
            tooling: string[];
            programs: string[];
            qualityChecks: {
                id: string;
                requirementId: string;
                timestamp: string;
                inspector: string;
                result: "pass" | "fail" | "rework";
                actualValue?: string | undefined;
                notes?: string | undefined;
                images?: string[] | undefined;
            }[];
            instructions: string[];
        }[];
        dncPrograms: {
            id: string;
            programNumber: string;
            name: string;
            description: string;
            filePath: string;
            version: string;
            lastModified: string;
            operationId: string;
            machine: string;
            toolList: {
                id: string;
                toolNumber: number;
                description: string;
                type: import("../types").ToolType;
                diameter?: number | undefined;
                length?: number | undefined;
                material: string;
                coating?: string | undefined;
                vendor: string;
                partNumber: string;
                location: string;
                status: "available" | "in-use" | "maintenance" | "broken";
            }[];
            parameters: {
                name: string;
                value: string | number;
                description: string;
                unit?: string | undefined;
            }[];
            estimatedRunTime: number;
            status: "active" | "archived" | "development";
        }[];
        history: {
            id: string;
            timestamp: string;
            userId: string;
            userName: string;
            action: import("../types").HistoryAction;
            field?: string | undefined;
            oldValue?: any;
            newValue?: any;
            notes?: string | undefined;
            operationId?: string | undefined;
        }[];
        qualityRequirements: {
            id: string;
            feature: string;
            specification: string;
            tolerance: string;
            inspectionMethod: string;
            frequency: "first-piece" | "in-process" | "final" | "statistical";
            operationId?: string | undefined;
        }[];
        tooling: {
            id: string;
            operationId: string;
            toolId: string;
            quantity: number;
            setup: boolean;
            critical: boolean;
            alternatives?: string[] | undefined;
        }[];
        materials: {
            id: string;
            material: string;
            specification: string;
            quantity: number;
            unit: string;
            lotNumber?: string | undefined;
            certificationRequired: boolean;
            received: boolean;
            location?: string | undefined;
        }[];
        drawings: {
            id: string;
            name: string;
            revision: string;
            filePath: string;
            type: "setup" | "part" | "assembly" | "detail";
            lastModified: string;
            operationId?: string | undefined;
        }[];
        aiRecommendation?: {
            machine?: string | undefined;
            operator?: string | undefined;
            confidence?: number | undefined;
            reason?: string | undefined;
        } | undefined;
        createdAt: string;
        updatedAt: string;
    } | undefined;
}, "error" | "jobs" | "loading">, Pick<{
    jobs: import("vue").Ref<{
        id: string;
        jobNumber: string;
        partNumber: string;
        partName: string;
        customer: string;
        quantity: number;
        completedQuantity: number;
        status: JobStatus;
        priority: import("../types").Priority;
        dueDate: string;
        startDate?: string | undefined;
        estimatedHours: number;
        actualHours: number;
        operator?: string | undefined;
        machine?: string | undefined;
        operation: string;
        notes: string;
        operations: {
            id: string;
            operationNumber: number;
            name: string;
            description: string;
            workCenter: string;
            machine?: string | undefined;
            setupTime: number;
            cycleTime: number;
            status: import("../types").OperationStatus;
            completedQuantity: number;
            operator?: string | undefined;
            startTime?: string | undefined;
            endTime?: string | undefined;
            notes?: string | undefined;
            tooling: string[];
            programs: string[];
            qualityChecks: {
                id: string;
                requirementId: string;
                timestamp: string;
                inspector: string;
                result: "pass" | "fail" | "rework";
                actualValue?: string | undefined;
                notes?: string | undefined;
                images?: string[] | undefined;
            }[];
            instructions: string[];
        }[];
        dncPrograms: {
            id: string;
            programNumber: string;
            name: string;
            description: string;
            filePath: string;
            version: string;
            lastModified: string;
            operationId: string;
            machine: string;
            toolList: {
                id: string;
                toolNumber: number;
                description: string;
                type: import("../types").ToolType;
                diameter?: number | undefined;
                length?: number | undefined;
                material: string;
                coating?: string | undefined;
                vendor: string;
                partNumber: string;
                location: string;
                status: "available" | "in-use" | "maintenance" | "broken";
            }[];
            parameters: {
                name: string;
                value: string | number;
                description: string;
                unit?: string | undefined;
            }[];
            estimatedRunTime: number;
            status: "active" | "archived" | "development";
        }[];
        history: {
            id: string;
            timestamp: string;
            userId: string;
            userName: string;
            action: import("../types").HistoryAction;
            field?: string | undefined;
            oldValue?: any;
            newValue?: any;
            notes?: string | undefined;
            operationId?: string | undefined;
        }[];
        qualityRequirements: {
            id: string;
            feature: string;
            specification: string;
            tolerance: string;
            inspectionMethod: string;
            frequency: "first-piece" | "in-process" | "final" | "statistical";
            operationId?: string | undefined;
        }[];
        tooling: {
            id: string;
            operationId: string;
            toolId: string;
            quantity: number;
            setup: boolean;
            critical: boolean;
            alternatives?: string[] | undefined;
        }[];
        materials: {
            id: string;
            material: string;
            specification: string;
            quantity: number;
            unit: string;
            lotNumber?: string | undefined;
            certificationRequired: boolean;
            received: boolean;
            location?: string | undefined;
        }[];
        drawings: {
            id: string;
            name: string;
            revision: string;
            filePath: string;
            type: "setup" | "part" | "assembly" | "detail";
            lastModified: string;
            operationId?: string | undefined;
        }[];
        aiRecommendation?: {
            machine?: string | undefined;
            operator?: string | undefined;
            confidence?: number | undefined;
            reason?: string | undefined;
        } | undefined;
        createdAt: string;
        updatedAt: string;
    }[], Job[] | {
        id: string;
        jobNumber: string;
        partNumber: string;
        partName: string;
        customer: string;
        quantity: number;
        completedQuantity: number;
        status: JobStatus;
        priority: import("../types").Priority;
        dueDate: string;
        startDate?: string | undefined;
        estimatedHours: number;
        actualHours: number;
        operator?: string | undefined;
        machine?: string | undefined;
        operation: string;
        notes: string;
        operations: {
            id: string;
            operationNumber: number;
            name: string;
            description: string;
            workCenter: string;
            machine?: string | undefined;
            setupTime: number;
            cycleTime: number;
            status: import("../types").OperationStatus;
            completedQuantity: number;
            operator?: string | undefined;
            startTime?: string | undefined;
            endTime?: string | undefined;
            notes?: string | undefined;
            tooling: string[];
            programs: string[];
            qualityChecks: {
                id: string;
                requirementId: string;
                timestamp: string;
                inspector: string;
                result: "pass" | "fail" | "rework";
                actualValue?: string | undefined;
                notes?: string | undefined;
                images?: string[] | undefined;
            }[];
            instructions: string[];
        }[];
        dncPrograms: {
            id: string;
            programNumber: string;
            name: string;
            description: string;
            filePath: string;
            version: string;
            lastModified: string;
            operationId: string;
            machine: string;
            toolList: {
                id: string;
                toolNumber: number;
                description: string;
                type: import("../types").ToolType;
                diameter?: number | undefined;
                length?: number | undefined;
                material: string;
                coating?: string | undefined;
                vendor: string;
                partNumber: string;
                location: string;
                status: "available" | "in-use" | "maintenance" | "broken";
            }[];
            parameters: {
                name: string;
                value: string | number;
                description: string;
                unit?: string | undefined;
            }[];
            estimatedRunTime: number;
            status: "active" | "archived" | "development";
        }[];
        history: {
            id: string;
            timestamp: string;
            userId: string;
            userName: string;
            action: import("../types").HistoryAction;
            field?: string | undefined;
            oldValue?: any;
            newValue?: any;
            notes?: string | undefined;
            operationId?: string | undefined;
        }[];
        qualityRequirements: {
            id: string;
            feature: string;
            specification: string;
            tolerance: string;
            inspectionMethod: string;
            frequency: "first-piece" | "in-process" | "final" | "statistical";
            operationId?: string | undefined;
        }[];
        tooling: {
            id: string;
            operationId: string;
            toolId: string;
            quantity: number;
            setup: boolean;
            critical: boolean;
            alternatives?: string[] | undefined;
        }[];
        materials: {
            id: string;
            material: string;
            specification: string;
            quantity: number;
            unit: string;
            lotNumber?: string | undefined;
            certificationRequired: boolean;
            received: boolean;
            location?: string | undefined;
        }[];
        drawings: {
            id: string;
            name: string;
            revision: string;
            filePath: string;
            type: "setup" | "part" | "assembly" | "detail";
            lastModified: string;
            operationId?: string | undefined;
        }[];
        aiRecommendation?: {
            machine?: string | undefined;
            operator?: string | undefined;
            confidence?: number | undefined;
            reason?: string | undefined;
        } | undefined;
        createdAt: string;
        updatedAt: string;
    }[]>;
    loading: import("vue").Ref<boolean, boolean>;
    error: import("vue").Ref<string | null, string | null>;
    activeJobs: import("vue").ComputedRef<{
        id: string;
        jobNumber: string;
        partNumber: string;
        partName: string;
        customer: string;
        quantity: number;
        completedQuantity: number;
        status: JobStatus;
        priority: import("../types").Priority;
        dueDate: string;
        startDate?: string | undefined;
        estimatedHours: number;
        actualHours: number;
        operator?: string | undefined;
        machine?: string | undefined;
        operation: string;
        notes: string;
        operations: {
            id: string;
            operationNumber: number;
            name: string;
            description: string;
            workCenter: string;
            machine?: string | undefined;
            setupTime: number;
            cycleTime: number;
            status: import("../types").OperationStatus;
            completedQuantity: number;
            operator?: string | undefined;
            startTime?: string | undefined;
            endTime?: string | undefined;
            notes?: string | undefined;
            tooling: string[];
            programs: string[];
            qualityChecks: {
                id: string;
                requirementId: string;
                timestamp: string;
                inspector: string;
                result: "pass" | "fail" | "rework";
                actualValue?: string | undefined;
                notes?: string | undefined;
                images?: string[] | undefined;
            }[];
            instructions: string[];
        }[];
        dncPrograms: {
            id: string;
            programNumber: string;
            name: string;
            description: string;
            filePath: string;
            version: string;
            lastModified: string;
            operationId: string;
            machine: string;
            toolList: {
                id: string;
                toolNumber: number;
                description: string;
                type: import("../types").ToolType;
                diameter?: number | undefined;
                length?: number | undefined;
                material: string;
                coating?: string | undefined;
                vendor: string;
                partNumber: string;
                location: string;
                status: "available" | "in-use" | "maintenance" | "broken";
            }[];
            parameters: {
                name: string;
                value: string | number;
                description: string;
                unit?: string | undefined;
            }[];
            estimatedRunTime: number;
            status: "active" | "archived" | "development";
        }[];
        history: {
            id: string;
            timestamp: string;
            userId: string;
            userName: string;
            action: import("../types").HistoryAction;
            field?: string | undefined;
            oldValue?: any;
            newValue?: any;
            notes?: string | undefined;
            operationId?: string | undefined;
        }[];
        qualityRequirements: {
            id: string;
            feature: string;
            specification: string;
            tolerance: string;
            inspectionMethod: string;
            frequency: "first-piece" | "in-process" | "final" | "statistical";
            operationId?: string | undefined;
        }[];
        tooling: {
            id: string;
            operationId: string;
            toolId: string;
            quantity: number;
            setup: boolean;
            critical: boolean;
            alternatives?: string[] | undefined;
        }[];
        materials: {
            id: string;
            material: string;
            specification: string;
            quantity: number;
            unit: string;
            lotNumber?: string | undefined;
            certificationRequired: boolean;
            received: boolean;
            location?: string | undefined;
        }[];
        drawings: {
            id: string;
            name: string;
            revision: string;
            filePath: string;
            type: "setup" | "part" | "assembly" | "detail";
            lastModified: string;
            operationId?: string | undefined;
        }[];
        aiRecommendation?: {
            machine?: string | undefined;
            operator?: string | undefined;
            confidence?: number | undefined;
            reason?: string | undefined;
        } | undefined;
        createdAt: string;
        updatedAt: string;
    }[]>;
    completedJobs: import("vue").ComputedRef<{
        id: string;
        jobNumber: string;
        partNumber: string;
        partName: string;
        customer: string;
        quantity: number;
        completedQuantity: number;
        status: JobStatus;
        priority: import("../types").Priority;
        dueDate: string;
        startDate?: string | undefined;
        estimatedHours: number;
        actualHours: number;
        operator?: string | undefined;
        machine?: string | undefined;
        operation: string;
        notes: string;
        operations: {
            id: string;
            operationNumber: number;
            name: string;
            description: string;
            workCenter: string;
            machine?: string | undefined;
            setupTime: number;
            cycleTime: number;
            status: import("../types").OperationStatus;
            completedQuantity: number;
            operator?: string | undefined;
            startTime?: string | undefined;
            endTime?: string | undefined;
            notes?: string | undefined;
            tooling: string[];
            programs: string[];
            qualityChecks: {
                id: string;
                requirementId: string;
                timestamp: string;
                inspector: string;
                result: "pass" | "fail" | "rework";
                actualValue?: string | undefined;
                notes?: string | undefined;
                images?: string[] | undefined;
            }[];
            instructions: string[];
        }[];
        dncPrograms: {
            id: string;
            programNumber: string;
            name: string;
            description: string;
            filePath: string;
            version: string;
            lastModified: string;
            operationId: string;
            machine: string;
            toolList: {
                id: string;
                toolNumber: number;
                description: string;
                type: import("../types").ToolType;
                diameter?: number | undefined;
                length?: number | undefined;
                material: string;
                coating?: string | undefined;
                vendor: string;
                partNumber: string;
                location: string;
                status: "available" | "in-use" | "maintenance" | "broken";
            }[];
            parameters: {
                name: string;
                value: string | number;
                description: string;
                unit?: string | undefined;
            }[];
            estimatedRunTime: number;
            status: "active" | "archived" | "development";
        }[];
        history: {
            id: string;
            timestamp: string;
            userId: string;
            userName: string;
            action: import("../types").HistoryAction;
            field?: string | undefined;
            oldValue?: any;
            newValue?: any;
            notes?: string | undefined;
            operationId?: string | undefined;
        }[];
        qualityRequirements: {
            id: string;
            feature: string;
            specification: string;
            tolerance: string;
            inspectionMethod: string;
            frequency: "first-piece" | "in-process" | "final" | "statistical";
            operationId?: string | undefined;
        }[];
        tooling: {
            id: string;
            operationId: string;
            toolId: string;
            quantity: number;
            setup: boolean;
            critical: boolean;
            alternatives?: string[] | undefined;
        }[];
        materials: {
            id: string;
            material: string;
            specification: string;
            quantity: number;
            unit: string;
            lotNumber?: string | undefined;
            certificationRequired: boolean;
            received: boolean;
            location?: string | undefined;
        }[];
        drawings: {
            id: string;
            name: string;
            revision: string;
            filePath: string;
            type: "setup" | "part" | "assembly" | "detail";
            lastModified: string;
            operationId?: string | undefined;
        }[];
        aiRecommendation?: {
            machine?: string | undefined;
            operator?: string | undefined;
            confidence?: number | undefined;
            reason?: string | undefined;
        } | undefined;
        createdAt: string;
        updatedAt: string;
    }[]>;
    urgentJobs: import("vue").ComputedRef<{
        id: string;
        jobNumber: string;
        partNumber: string;
        partName: string;
        customer: string;
        quantity: number;
        completedQuantity: number;
        status: JobStatus;
        priority: import("../types").Priority;
        dueDate: string;
        startDate?: string | undefined;
        estimatedHours: number;
        actualHours: number;
        operator?: string | undefined;
        machine?: string | undefined;
        operation: string;
        notes: string;
        operations: {
            id: string;
            operationNumber: number;
            name: string;
            description: string;
            workCenter: string;
            machine?: string | undefined;
            setupTime: number;
            cycleTime: number;
            status: import("../types").OperationStatus;
            completedQuantity: number;
            operator?: string | undefined;
            startTime?: string | undefined;
            endTime?: string | undefined;
            notes?: string | undefined;
            tooling: string[];
            programs: string[];
            qualityChecks: {
                id: string;
                requirementId: string;
                timestamp: string;
                inspector: string;
                result: "pass" | "fail" | "rework";
                actualValue?: string | undefined;
                notes?: string | undefined;
                images?: string[] | undefined;
            }[];
            instructions: string[];
        }[];
        dncPrograms: {
            id: string;
            programNumber: string;
            name: string;
            description: string;
            filePath: string;
            version: string;
            lastModified: string;
            operationId: string;
            machine: string;
            toolList: {
                id: string;
                toolNumber: number;
                description: string;
                type: import("../types").ToolType;
                diameter?: number | undefined;
                length?: number | undefined;
                material: string;
                coating?: string | undefined;
                vendor: string;
                partNumber: string;
                location: string;
                status: "available" | "in-use" | "maintenance" | "broken";
            }[];
            parameters: {
                name: string;
                value: string | number;
                description: string;
                unit?: string | undefined;
            }[];
            estimatedRunTime: number;
            status: "active" | "archived" | "development";
        }[];
        history: {
            id: string;
            timestamp: string;
            userId: string;
            userName: string;
            action: import("../types").HistoryAction;
            field?: string | undefined;
            oldValue?: any;
            newValue?: any;
            notes?: string | undefined;
            operationId?: string | undefined;
        }[];
        qualityRequirements: {
            id: string;
            feature: string;
            specification: string;
            tolerance: string;
            inspectionMethod: string;
            frequency: "first-piece" | "in-process" | "final" | "statistical";
            operationId?: string | undefined;
        }[];
        tooling: {
            id: string;
            operationId: string;
            toolId: string;
            quantity: number;
            setup: boolean;
            critical: boolean;
            alternatives?: string[] | undefined;
        }[];
        materials: {
            id: string;
            material: string;
            specification: string;
            quantity: number;
            unit: string;
            lotNumber?: string | undefined;
            certificationRequired: boolean;
            received: boolean;
            location?: string | undefined;
        }[];
        drawings: {
            id: string;
            name: string;
            revision: string;
            filePath: string;
            type: "setup" | "part" | "assembly" | "detail";
            lastModified: string;
            operationId?: string | undefined;
        }[];
        aiRecommendation?: {
            machine?: string | undefined;
            operator?: string | undefined;
            confidence?: number | undefined;
            reason?: string | undefined;
        } | undefined;
        createdAt: string;
        updatedAt: string;
    }[]>;
    jobsByStatus: import("vue").ComputedRef<{
        pending: number;
        setup: number;
        running: number;
        'on-hold': number;
        completed: number;
    }>;
    fetchJobs: () => Promise<void>;
    updateJobStatus: (jobId: string, status: JobStatus, notes?: string) => Promise<boolean>;
    updateJobProgress: (jobId: string, completedQuantity: number) => Promise<boolean>;
    getJobById: (jobId: string) => {
        id: string;
        jobNumber: string;
        partNumber: string;
        partName: string;
        customer: string;
        quantity: number;
        completedQuantity: number;
        status: JobStatus;
        priority: import("../types").Priority;
        dueDate: string;
        startDate?: string | undefined;
        estimatedHours: number;
        actualHours: number;
        operator?: string | undefined;
        machine?: string | undefined;
        operation: string;
        notes: string;
        operations: {
            id: string;
            operationNumber: number;
            name: string;
            description: string;
            workCenter: string;
            machine?: string | undefined;
            setupTime: number;
            cycleTime: number;
            status: import("../types").OperationStatus;
            completedQuantity: number;
            operator?: string | undefined;
            startTime?: string | undefined;
            endTime?: string | undefined;
            notes?: string | undefined;
            tooling: string[];
            programs: string[];
            qualityChecks: {
                id: string;
                requirementId: string;
                timestamp: string;
                inspector: string;
                result: "pass" | "fail" | "rework";
                actualValue?: string | undefined;
                notes?: string | undefined;
                images?: string[] | undefined;
            }[];
            instructions: string[];
        }[];
        dncPrograms: {
            id: string;
            programNumber: string;
            name: string;
            description: string;
            filePath: string;
            version: string;
            lastModified: string;
            operationId: string;
            machine: string;
            toolList: {
                id: string;
                toolNumber: number;
                description: string;
                type: import("../types").ToolType;
                diameter?: number | undefined;
                length?: number | undefined;
                material: string;
                coating?: string | undefined;
                vendor: string;
                partNumber: string;
                location: string;
                status: "available" | "in-use" | "maintenance" | "broken";
            }[];
            parameters: {
                name: string;
                value: string | number;
                description: string;
                unit?: string | undefined;
            }[];
            estimatedRunTime: number;
            status: "active" | "archived" | "development";
        }[];
        history: {
            id: string;
            timestamp: string;
            userId: string;
            userName: string;
            action: import("../types").HistoryAction;
            field?: string | undefined;
            oldValue?: any;
            newValue?: any;
            notes?: string | undefined;
            operationId?: string | undefined;
        }[];
        qualityRequirements: {
            id: string;
            feature: string;
            specification: string;
            tolerance: string;
            inspectionMethod: string;
            frequency: "first-piece" | "in-process" | "final" | "statistical";
            operationId?: string | undefined;
        }[];
        tooling: {
            id: string;
            operationId: string;
            toolId: string;
            quantity: number;
            setup: boolean;
            critical: boolean;
            alternatives?: string[] | undefined;
        }[];
        materials: {
            id: string;
            material: string;
            specification: string;
            quantity: number;
            unit: string;
            lotNumber?: string | undefined;
            certificationRequired: boolean;
            received: boolean;
            location?: string | undefined;
        }[];
        drawings: {
            id: string;
            name: string;
            revision: string;
            filePath: string;
            type: "setup" | "part" | "assembly" | "detail";
            lastModified: string;
            operationId?: string | undefined;
        }[];
        aiRecommendation?: {
            machine?: string | undefined;
            operator?: string | undefined;
            confidence?: number | undefined;
            reason?: string | undefined;
        } | undefined;
        createdAt: string;
        updatedAt: string;
    } | undefined;
}, "activeJobs" | "completedJobs" | "urgentJobs" | "jobsByStatus">, Pick<{
    jobs: import("vue").Ref<{
        id: string;
        jobNumber: string;
        partNumber: string;
        partName: string;
        customer: string;
        quantity: number;
        completedQuantity: number;
        status: JobStatus;
        priority: import("../types").Priority;
        dueDate: string;
        startDate?: string | undefined;
        estimatedHours: number;
        actualHours: number;
        operator?: string | undefined;
        machine?: string | undefined;
        operation: string;
        notes: string;
        operations: {
            id: string;
            operationNumber: number;
            name: string;
            description: string;
            workCenter: string;
            machine?: string | undefined;
            setupTime: number;
            cycleTime: number;
            status: import("../types").OperationStatus;
            completedQuantity: number;
            operator?: string | undefined;
            startTime?: string | undefined;
            endTime?: string | undefined;
            notes?: string | undefined;
            tooling: string[];
            programs: string[];
            qualityChecks: {
                id: string;
                requirementId: string;
                timestamp: string;
                inspector: string;
                result: "pass" | "fail" | "rework";
                actualValue?: string | undefined;
                notes?: string | undefined;
                images?: string[] | undefined;
            }[];
            instructions: string[];
        }[];
        dncPrograms: {
            id: string;
            programNumber: string;
            name: string;
            description: string;
            filePath: string;
            version: string;
            lastModified: string;
            operationId: string;
            machine: string;
            toolList: {
                id: string;
                toolNumber: number;
                description: string;
                type: import("../types").ToolType;
                diameter?: number | undefined;
                length?: number | undefined;
                material: string;
                coating?: string | undefined;
                vendor: string;
                partNumber: string;
                location: string;
                status: "available" | "in-use" | "maintenance" | "broken";
            }[];
            parameters: {
                name: string;
                value: string | number;
                description: string;
                unit?: string | undefined;
            }[];
            estimatedRunTime: number;
            status: "active" | "archived" | "development";
        }[];
        history: {
            id: string;
            timestamp: string;
            userId: string;
            userName: string;
            action: import("../types").HistoryAction;
            field?: string | undefined;
            oldValue?: any;
            newValue?: any;
            notes?: string | undefined;
            operationId?: string | undefined;
        }[];
        qualityRequirements: {
            id: string;
            feature: string;
            specification: string;
            tolerance: string;
            inspectionMethod: string;
            frequency: "first-piece" | "in-process" | "final" | "statistical";
            operationId?: string | undefined;
        }[];
        tooling: {
            id: string;
            operationId: string;
            toolId: string;
            quantity: number;
            setup: boolean;
            critical: boolean;
            alternatives?: string[] | undefined;
        }[];
        materials: {
            id: string;
            material: string;
            specification: string;
            quantity: number;
            unit: string;
            lotNumber?: string | undefined;
            certificationRequired: boolean;
            received: boolean;
            location?: string | undefined;
        }[];
        drawings: {
            id: string;
            name: string;
            revision: string;
            filePath: string;
            type: "setup" | "part" | "assembly" | "detail";
            lastModified: string;
            operationId?: string | undefined;
        }[];
        aiRecommendation?: {
            machine?: string | undefined;
            operator?: string | undefined;
            confidence?: number | undefined;
            reason?: string | undefined;
        } | undefined;
        createdAt: string;
        updatedAt: string;
    }[], Job[] | {
        id: string;
        jobNumber: string;
        partNumber: string;
        partName: string;
        customer: string;
        quantity: number;
        completedQuantity: number;
        status: JobStatus;
        priority: import("../types").Priority;
        dueDate: string;
        startDate?: string | undefined;
        estimatedHours: number;
        actualHours: number;
        operator?: string | undefined;
        machine?: string | undefined;
        operation: string;
        notes: string;
        operations: {
            id: string;
            operationNumber: number;
            name: string;
            description: string;
            workCenter: string;
            machine?: string | undefined;
            setupTime: number;
            cycleTime: number;
            status: import("../types").OperationStatus;
            completedQuantity: number;
            operator?: string | undefined;
            startTime?: string | undefined;
            endTime?: string | undefined;
            notes?: string | undefined;
            tooling: string[];
            programs: string[];
            qualityChecks: {
                id: string;
                requirementId: string;
                timestamp: string;
                inspector: string;
                result: "pass" | "fail" | "rework";
                actualValue?: string | undefined;
                notes?: string | undefined;
                images?: string[] | undefined;
            }[];
            instructions: string[];
        }[];
        dncPrograms: {
            id: string;
            programNumber: string;
            name: string;
            description: string;
            filePath: string;
            version: string;
            lastModified: string;
            operationId: string;
            machine: string;
            toolList: {
                id: string;
                toolNumber: number;
                description: string;
                type: import("../types").ToolType;
                diameter?: number | undefined;
                length?: number | undefined;
                material: string;
                coating?: string | undefined;
                vendor: string;
                partNumber: string;
                location: string;
                status: "available" | "in-use" | "maintenance" | "broken";
            }[];
            parameters: {
                name: string;
                value: string | number;
                description: string;
                unit?: string | undefined;
            }[];
            estimatedRunTime: number;
            status: "active" | "archived" | "development";
        }[];
        history: {
            id: string;
            timestamp: string;
            userId: string;
            userName: string;
            action: import("../types").HistoryAction;
            field?: string | undefined;
            oldValue?: any;
            newValue?: any;
            notes?: string | undefined;
            operationId?: string | undefined;
        }[];
        qualityRequirements: {
            id: string;
            feature: string;
            specification: string;
            tolerance: string;
            inspectionMethod: string;
            frequency: "first-piece" | "in-process" | "final" | "statistical";
            operationId?: string | undefined;
        }[];
        tooling: {
            id: string;
            operationId: string;
            toolId: string;
            quantity: number;
            setup: boolean;
            critical: boolean;
            alternatives?: string[] | undefined;
        }[];
        materials: {
            id: string;
            material: string;
            specification: string;
            quantity: number;
            unit: string;
            lotNumber?: string | undefined;
            certificationRequired: boolean;
            received: boolean;
            location?: string | undefined;
        }[];
        drawings: {
            id: string;
            name: string;
            revision: string;
            filePath: string;
            type: "setup" | "part" | "assembly" | "detail";
            lastModified: string;
            operationId?: string | undefined;
        }[];
        aiRecommendation?: {
            machine?: string | undefined;
            operator?: string | undefined;
            confidence?: number | undefined;
            reason?: string | undefined;
        } | undefined;
        createdAt: string;
        updatedAt: string;
    }[]>;
    loading: import("vue").Ref<boolean, boolean>;
    error: import("vue").Ref<string | null, string | null>;
    activeJobs: import("vue").ComputedRef<{
        id: string;
        jobNumber: string;
        partNumber: string;
        partName: string;
        customer: string;
        quantity: number;
        completedQuantity: number;
        status: JobStatus;
        priority: import("../types").Priority;
        dueDate: string;
        startDate?: string | undefined;
        estimatedHours: number;
        actualHours: number;
        operator?: string | undefined;
        machine?: string | undefined;
        operation: string;
        notes: string;
        operations: {
            id: string;
            operationNumber: number;
            name: string;
            description: string;
            workCenter: string;
            machine?: string | undefined;
            setupTime: number;
            cycleTime: number;
            status: import("../types").OperationStatus;
            completedQuantity: number;
            operator?: string | undefined;
            startTime?: string | undefined;
            endTime?: string | undefined;
            notes?: string | undefined;
            tooling: string[];
            programs: string[];
            qualityChecks: {
                id: string;
                requirementId: string;
                timestamp: string;
                inspector: string;
                result: "pass" | "fail" | "rework";
                actualValue?: string | undefined;
                notes?: string | undefined;
                images?: string[] | undefined;
            }[];
            instructions: string[];
        }[];
        dncPrograms: {
            id: string;
            programNumber: string;
            name: string;
            description: string;
            filePath: string;
            version: string;
            lastModified: string;
            operationId: string;
            machine: string;
            toolList: {
                id: string;
                toolNumber: number;
                description: string;
                type: import("../types").ToolType;
                diameter?: number | undefined;
                length?: number | undefined;
                material: string;
                coating?: string | undefined;
                vendor: string;
                partNumber: string;
                location: string;
                status: "available" | "in-use" | "maintenance" | "broken";
            }[];
            parameters: {
                name: string;
                value: string | number;
                description: string;
                unit?: string | undefined;
            }[];
            estimatedRunTime: number;
            status: "active" | "archived" | "development";
        }[];
        history: {
            id: string;
            timestamp: string;
            userId: string;
            userName: string;
            action: import("../types").HistoryAction;
            field?: string | undefined;
            oldValue?: any;
            newValue?: any;
            notes?: string | undefined;
            operationId?: string | undefined;
        }[];
        qualityRequirements: {
            id: string;
            feature: string;
            specification: string;
            tolerance: string;
            inspectionMethod: string;
            frequency: "first-piece" | "in-process" | "final" | "statistical";
            operationId?: string | undefined;
        }[];
        tooling: {
            id: string;
            operationId: string;
            toolId: string;
            quantity: number;
            setup: boolean;
            critical: boolean;
            alternatives?: string[] | undefined;
        }[];
        materials: {
            id: string;
            material: string;
            specification: string;
            quantity: number;
            unit: string;
            lotNumber?: string | undefined;
            certificationRequired: boolean;
            received: boolean;
            location?: string | undefined;
        }[];
        drawings: {
            id: string;
            name: string;
            revision: string;
            filePath: string;
            type: "setup" | "part" | "assembly" | "detail";
            lastModified: string;
            operationId?: string | undefined;
        }[];
        aiRecommendation?: {
            machine?: string | undefined;
            operator?: string | undefined;
            confidence?: number | undefined;
            reason?: string | undefined;
        } | undefined;
        createdAt: string;
        updatedAt: string;
    }[]>;
    completedJobs: import("vue").ComputedRef<{
        id: string;
        jobNumber: string;
        partNumber: string;
        partName: string;
        customer: string;
        quantity: number;
        completedQuantity: number;
        status: JobStatus;
        priority: import("../types").Priority;
        dueDate: string;
        startDate?: string | undefined;
        estimatedHours: number;
        actualHours: number;
        operator?: string | undefined;
        machine?: string | undefined;
        operation: string;
        notes: string;
        operations: {
            id: string;
            operationNumber: number;
            name: string;
            description: string;
            workCenter: string;
            machine?: string | undefined;
            setupTime: number;
            cycleTime: number;
            status: import("../types").OperationStatus;
            completedQuantity: number;
            operator?: string | undefined;
            startTime?: string | undefined;
            endTime?: string | undefined;
            notes?: string | undefined;
            tooling: string[];
            programs: string[];
            qualityChecks: {
                id: string;
                requirementId: string;
                timestamp: string;
                inspector: string;
                result: "pass" | "fail" | "rework";
                actualValue?: string | undefined;
                notes?: string | undefined;
                images?: string[] | undefined;
            }[];
            instructions: string[];
        }[];
        dncPrograms: {
            id: string;
            programNumber: string;
            name: string;
            description: string;
            filePath: string;
            version: string;
            lastModified: string;
            operationId: string;
            machine: string;
            toolList: {
                id: string;
                toolNumber: number;
                description: string;
                type: import("../types").ToolType;
                diameter?: number | undefined;
                length?: number | undefined;
                material: string;
                coating?: string | undefined;
                vendor: string;
                partNumber: string;
                location: string;
                status: "available" | "in-use" | "maintenance" | "broken";
            }[];
            parameters: {
                name: string;
                value: string | number;
                description: string;
                unit?: string | undefined;
            }[];
            estimatedRunTime: number;
            status: "active" | "archived" | "development";
        }[];
        history: {
            id: string;
            timestamp: string;
            userId: string;
            userName: string;
            action: import("../types").HistoryAction;
            field?: string | undefined;
            oldValue?: any;
            newValue?: any;
            notes?: string | undefined;
            operationId?: string | undefined;
        }[];
        qualityRequirements: {
            id: string;
            feature: string;
            specification: string;
            tolerance: string;
            inspectionMethod: string;
            frequency: "first-piece" | "in-process" | "final" | "statistical";
            operationId?: string | undefined;
        }[];
        tooling: {
            id: string;
            operationId: string;
            toolId: string;
            quantity: number;
            setup: boolean;
            critical: boolean;
            alternatives?: string[] | undefined;
        }[];
        materials: {
            id: string;
            material: string;
            specification: string;
            quantity: number;
            unit: string;
            lotNumber?: string | undefined;
            certificationRequired: boolean;
            received: boolean;
            location?: string | undefined;
        }[];
        drawings: {
            id: string;
            name: string;
            revision: string;
            filePath: string;
            type: "setup" | "part" | "assembly" | "detail";
            lastModified: string;
            operationId?: string | undefined;
        }[];
        aiRecommendation?: {
            machine?: string | undefined;
            operator?: string | undefined;
            confidence?: number | undefined;
            reason?: string | undefined;
        } | undefined;
        createdAt: string;
        updatedAt: string;
    }[]>;
    urgentJobs: import("vue").ComputedRef<{
        id: string;
        jobNumber: string;
        partNumber: string;
        partName: string;
        customer: string;
        quantity: number;
        completedQuantity: number;
        status: JobStatus;
        priority: import("../types").Priority;
        dueDate: string;
        startDate?: string | undefined;
        estimatedHours: number;
        actualHours: number;
        operator?: string | undefined;
        machine?: string | undefined;
        operation: string;
        notes: string;
        operations: {
            id: string;
            operationNumber: number;
            name: string;
            description: string;
            workCenter: string;
            machine?: string | undefined;
            setupTime: number;
            cycleTime: number;
            status: import("../types").OperationStatus;
            completedQuantity: number;
            operator?: string | undefined;
            startTime?: string | undefined;
            endTime?: string | undefined;
            notes?: string | undefined;
            tooling: string[];
            programs: string[];
            qualityChecks: {
                id: string;
                requirementId: string;
                timestamp: string;
                inspector: string;
                result: "pass" | "fail" | "rework";
                actualValue?: string | undefined;
                notes?: string | undefined;
                images?: string[] | undefined;
            }[];
            instructions: string[];
        }[];
        dncPrograms: {
            id: string;
            programNumber: string;
            name: string;
            description: string;
            filePath: string;
            version: string;
            lastModified: string;
            operationId: string;
            machine: string;
            toolList: {
                id: string;
                toolNumber: number;
                description: string;
                type: import("../types").ToolType;
                diameter?: number | undefined;
                length?: number | undefined;
                material: string;
                coating?: string | undefined;
                vendor: string;
                partNumber: string;
                location: string;
                status: "available" | "in-use" | "maintenance" | "broken";
            }[];
            parameters: {
                name: string;
                value: string | number;
                description: string;
                unit?: string | undefined;
            }[];
            estimatedRunTime: number;
            status: "active" | "archived" | "development";
        }[];
        history: {
            id: string;
            timestamp: string;
            userId: string;
            userName: string;
            action: import("../types").HistoryAction;
            field?: string | undefined;
            oldValue?: any;
            newValue?: any;
            notes?: string | undefined;
            operationId?: string | undefined;
        }[];
        qualityRequirements: {
            id: string;
            feature: string;
            specification: string;
            tolerance: string;
            inspectionMethod: string;
            frequency: "first-piece" | "in-process" | "final" | "statistical";
            operationId?: string | undefined;
        }[];
        tooling: {
            id: string;
            operationId: string;
            toolId: string;
            quantity: number;
            setup: boolean;
            critical: boolean;
            alternatives?: string[] | undefined;
        }[];
        materials: {
            id: string;
            material: string;
            specification: string;
            quantity: number;
            unit: string;
            lotNumber?: string | undefined;
            certificationRequired: boolean;
            received: boolean;
            location?: string | undefined;
        }[];
        drawings: {
            id: string;
            name: string;
            revision: string;
            filePath: string;
            type: "setup" | "part" | "assembly" | "detail";
            lastModified: string;
            operationId?: string | undefined;
        }[];
        aiRecommendation?: {
            machine?: string | undefined;
            operator?: string | undefined;
            confidence?: number | undefined;
            reason?: string | undefined;
        } | undefined;
        createdAt: string;
        updatedAt: string;
    }[]>;
    jobsByStatus: import("vue").ComputedRef<{
        pending: number;
        setup: number;
        running: number;
        'on-hold': number;
        completed: number;
    }>;
    fetchJobs: () => Promise<void>;
    updateJobStatus: (jobId: string, status: JobStatus, notes?: string) => Promise<boolean>;
    updateJobProgress: (jobId: string, completedQuantity: number) => Promise<boolean>;
    getJobById: (jobId: string) => {
        id: string;
        jobNumber: string;
        partNumber: string;
        partName: string;
        customer: string;
        quantity: number;
        completedQuantity: number;
        status: JobStatus;
        priority: import("../types").Priority;
        dueDate: string;
        startDate?: string | undefined;
        estimatedHours: number;
        actualHours: number;
        operator?: string | undefined;
        machine?: string | undefined;
        operation: string;
        notes: string;
        operations: {
            id: string;
            operationNumber: number;
            name: string;
            description: string;
            workCenter: string;
            machine?: string | undefined;
            setupTime: number;
            cycleTime: number;
            status: import("../types").OperationStatus;
            completedQuantity: number;
            operator?: string | undefined;
            startTime?: string | undefined;
            endTime?: string | undefined;
            notes?: string | undefined;
            tooling: string[];
            programs: string[];
            qualityChecks: {
                id: string;
                requirementId: string;
                timestamp: string;
                inspector: string;
                result: "pass" | "fail" | "rework";
                actualValue?: string | undefined;
                notes?: string | undefined;
                images?: string[] | undefined;
            }[];
            instructions: string[];
        }[];
        dncPrograms: {
            id: string;
            programNumber: string;
            name: string;
            description: string;
            filePath: string;
            version: string;
            lastModified: string;
            operationId: string;
            machine: string;
            toolList: {
                id: string;
                toolNumber: number;
                description: string;
                type: import("../types").ToolType;
                diameter?: number | undefined;
                length?: number | undefined;
                material: string;
                coating?: string | undefined;
                vendor: string;
                partNumber: string;
                location: string;
                status: "available" | "in-use" | "maintenance" | "broken";
            }[];
            parameters: {
                name: string;
                value: string | number;
                description: string;
                unit?: string | undefined;
            }[];
            estimatedRunTime: number;
            status: "active" | "archived" | "development";
        }[];
        history: {
            id: string;
            timestamp: string;
            userId: string;
            userName: string;
            action: import("../types").HistoryAction;
            field?: string | undefined;
            oldValue?: any;
            newValue?: any;
            notes?: string | undefined;
            operationId?: string | undefined;
        }[];
        qualityRequirements: {
            id: string;
            feature: string;
            specification: string;
            tolerance: string;
            inspectionMethod: string;
            frequency: "first-piece" | "in-process" | "final" | "statistical";
            operationId?: string | undefined;
        }[];
        tooling: {
            id: string;
            operationId: string;
            toolId: string;
            quantity: number;
            setup: boolean;
            critical: boolean;
            alternatives?: string[] | undefined;
        }[];
        materials: {
            id: string;
            material: string;
            specification: string;
            quantity: number;
            unit: string;
            lotNumber?: string | undefined;
            certificationRequired: boolean;
            received: boolean;
            location?: string | undefined;
        }[];
        drawings: {
            id: string;
            name: string;
            revision: string;
            filePath: string;
            type: "setup" | "part" | "assembly" | "detail";
            lastModified: string;
            operationId?: string | undefined;
        }[];
        aiRecommendation?: {
            machine?: string | undefined;
            operator?: string | undefined;
            confidence?: number | undefined;
            reason?: string | undefined;
        } | undefined;
        createdAt: string;
        updatedAt: string;
    } | undefined;
}, "fetchJobs" | "updateJobStatus" | "updateJobProgress" | "getJobById">>;
